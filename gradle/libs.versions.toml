[versions]
androidApplication = "8.11.1"
androidXTest = "1.6.1"
androidXTestRunner = "1.6.2"
androidXTestUiAutomator = "2.3.0"
androidXArchCore = "2.2.0"
androidXCoreRemoteViews = "1.1.0"
androidXExifinterfaceVersion = "1.4.1"
andromedaVersion = "15.2.0"
cameraxVersion = "1.4.2"
coreKtx = "1.16.0"
appcompat = "1.7.1"
constraintlayout = "2.2.1"
desugar_jdk_libs = "2.1.5"
flexbox = "3.0.0"
fragment = "1.8.8"
gridlayout = "1.1.0"
junitJupiter = "5.13.0"
junitPlatformRunner = "1.13.0"
junitVersion = "1.2.1"
junit = "4.13.2"
kotlinAndroidVersion = "2.1.21"
kotlinxCoroutinesAndroid = "1.8.0"
ksp = "2.1.21-2.0.1"
legacySupportV4 = "1.0.0"
navVersion = "2.9.0"
lifecycleVersion = "2.9.1"
material = "1.12.0"
luna = "0.3.6"
mockitoKotlin = "5.1.0"
roomVersion = "2.7.2"
sol = "11.3.0"
workRuntimeKtx = "2.10.1"
preferenceKtx = "1.2.1"

[libraries]
androidx-test-core = { module = "androidx.test:core", version.ref = "androidXTest" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidXTestRunner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidXTest" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidXTestUiAutomator" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "fragment" }
androidx-fragment-testing-manifest = { module = "androidx.fragment:fragment-testing-manifest", version.ref = "fragment" }
androidx-test-arch-core = { module = "androidx.arch.core:core-testing", version.ref = "androidXArchCore" }
androidx-core-remoteviews = { module = "androidx.core:core-remoteviews", version.ref = "androidXCoreRemoteViews" }
androidx-exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "androidXExifinterfaceVersion" }
andromeda-battery = { module = "com.kylecorry.andromeda:battery", version.ref = "andromedaVersion" }
andromeda-haptics = { module = "com.kylecorry.andromeda:haptics", version.ref = "andromedaVersion" }
andromeda-clipboard = { module = "com.kylecorry.andromeda:clipboard", version.ref = "andromedaVersion" }
andromeda-exceptions = { module = "com.kylecorry.andromeda:exceptions", version.ref = "andromedaVersion" }
andromeda-compression = { module = "com.kylecorry.andromeda:compression", version.ref = "andromedaVersion" }
andromeda-markdown = { module = "com.kylecorry.andromeda:markdown", version.ref = "andromedaVersion" }
andromeda-list = { module = "com.kylecorry.andromeda:list", version.ref = "andromedaVersion" }
andromeda-alerts = { module = "com.kylecorry.andromeda:alerts", version.ref = "andromedaVersion" }
andromeda-notify = { module = "com.kylecorry.andromeda:notify", version.ref = "andromedaVersion" }
andromeda-files = { module = "com.kylecorry.andromeda:files", version.ref = "andromedaVersion" }
andromeda-canvas = { module = "com.kylecorry.andromeda:canvas", version.ref = "andromedaVersion" }
andromeda-core = { module = "com.kylecorry.andromeda:core", version.ref = "andromedaVersion" }
andromeda-bitmaps = { module = "com.kylecorry.andromeda:bitmaps", version.ref = "andromedaVersion" }
andromeda-pdf = { module = "com.kylecorry.andromeda:pdf", version.ref = "andromedaVersion" }
andromeda-permissions = { module = "com.kylecorry.andromeda:permissions", version.ref = "andromedaVersion" }
andromeda-pickers = { module = "com.kylecorry.andromeda:pickers", version.ref = "andromedaVersion" }
andromeda-preferences = { module = "com.kylecorry.andromeda:preferences", version.ref = "andromedaVersion" }
andromeda-print = { module = "com.kylecorry.andromeda:print", version.ref = "andromedaVersion" }
andromeda-qr = { module = "com.kylecorry.andromeda:qr", version.ref = "andromedaVersion" }
andromeda-signal = { module = "com.kylecorry.andromeda:signal", version.ref = "andromedaVersion" }
andromeda-sense = { module = "com.kylecorry.andromeda:sense", version.ref = "andromedaVersion" }
andromeda-sound = { module = "com.kylecorry.andromeda:sound", version.ref = "andromedaVersion" }
andromeda-gpx = { module = "com.kylecorry.andromeda:gpx", version.ref = "andromedaVersion" }
andromeda-camera = { module = "com.kylecorry.andromeda:camera", version.ref = "andromedaVersion" }
andromeda-background = { module = "com.kylecorry.andromeda:background", version.ref = "andromedaVersion" }
andromeda-csv = { module = "com.kylecorry.andromeda:csv", version.ref = "andromedaVersion" }
andromeda-xml = { module = "com.kylecorry.andromeda:xml", version.ref = "andromedaVersion" }
andromeda-json = { module = "com.kylecorry.andromeda:json", version.ref = "andromedaVersion" }
andromeda-forms = { module = "com.kylecorry.andromeda:forms", version.ref = "andromedaVersion" }
andromeda-fragments = { module = "com.kylecorry.andromeda:fragments", version.ref = "andromedaVersion" }
andromeda-torch = { module = "com.kylecorry.andromeda:torch", version.ref = "andromedaVersion" }
andromeda-views = { module = "com.kylecorry.andromeda:views", version.ref = "andromedaVersion" }
andromeda-widgets = { module = "com.kylecorry.andromeda:widgets", version.ref = "andromedaVersion" }
camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraxVersion" }
camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraxVersion" }
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraxVersion" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
ext-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
gridlayout = { module = "androidx.gridlayout:gridlayout", version.ref = "gridlayout" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junit-platform-runner = { module = "org.junit.platform:junit-platform-runner", version.ref = "junitPlatformRunner" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycleVersion" }
luna = { module = "com.kylecorry:luna", version.ref = "luna" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion" }
navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
sol = { module = "com.kylecorry:sol", version.ref = "sol" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preferenceKtx" }
work-testing = { module = "androidx.work:work-testing", version.ref = "workRuntimeKtx" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidApplication" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinAndroidVersion" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }